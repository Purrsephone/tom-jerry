<launch>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="gui" default="true"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>

  <!-- startup simulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_house.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <param name="robot_description_tom" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_waffle.urdf.xacro" />
  <param name="robot_description_jerry" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_burger.urdf.xacro" />

  <!-- BEGIN ROBOT 1-->
  <group ns="tom">
    <param name="tf_prefix" value="tom_tf" />
    <include file="$(find tom_and_jerry_project)/launch/one_robot.launch" >
      <arg name="init_pose" value="-x -6 -y 0 -z 0" />
      <arg name="robot_name"  value="tom" />
      <arg name="robot_description"  value="robot_description_tom" />
    </include>
  </group>

  <!-- BEGIN ROBOT 2-->
  <group ns="jerry">
    <param name="tf_prefix" value="jerry_tf" />
    <include file="$(find tom_and_jerry_project)/launch/one_robot.launch" >
      <arg name="init_pose" value="-x -5 -y 1 -z 0" />
      <arg name="robot_name"  value="jerry" />
      <arg name="robot_description"  value="robot_description_jerry" />
    </include>
  </group>

  <!-- Map server -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(find tom_and_jerry_project)/map/house_map.yaml"/>

  <!-- Run a transformation between the map and odom frames -->
  <!-- <node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="-2.75 1.0 0 0 0 0 /map /odom 100" /> -->
  <node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="0 0 0 0 0 0 /map /odom 100" />

  <!-- run q matrix scripts -->
  <node name="state" pkg="tom_and_jerry_project" type="state.py" respawn="false" output="screen"/>
  
  <!-- run world restting node -->
  <node name="reset_world_q_learning" pkg="tom_and_jerry_project" type="reset_world.py" respawn="true" />

</launch>